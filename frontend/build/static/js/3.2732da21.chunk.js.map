{"version":3,"sources":["components/Map/index.js","components/dashboard/dashboardtabs/tabs.js","components/dashboard/index.js"],"names":["carboxyl","accessToken","Map","props","newMarker","t","lang","mapContainerRef","useRef","useState","lng","setLng","lat","setLat","zoom","setZoom","colors","warehouseLocation","warehouseArr","visible","shipment","markers","user","useSelector","state","toRad","Value","Math","PI","radians_to_degrees","radians","useEffect","map","container","current","style","center","latitude","parseFloat","longitude","coords","Marker","setLngLat","addTo","push","length","forEach","w","i","location","options","color","floor","random","scale","undefined","supplier","geojson","type","features","geometry","properties","coordinates","receiver","warehouse","on","addSource","data","addLayer","id","source","layout","paint","popL","lat1","lon1","lat2","lon2","dLon","Bx","cos","By","sin","lat3","atan2","sqrt","lon3","long","midPoint","Popup","offset","className","closeOnClick","setHTML","walletAddress","org","name","warehouseAddress","city","addControl","NavigationControl","getCenter","toFixed","getZoom","language","MapboxLanguage","defaultLanguage","remove","ref","Tabs","filteredWareHouses","setVisible","setWarehouseText","onWarehouseChange","onSearchClick","setContent","setDashVisible","setWarehouseArr","setDashBarData","isClicked","setIsClicked","console","log","onClick","position","Autocomplete","freeSolo","disableClearable","sx","width","getOptionLabel","title","onChange","e","key","renderInput","params","TextField","placeholder","InputProps","target","value","size","Search","DashBoard","warehouses","shipmentIds","warehouseText","refArr","setRefArr","isAuthenticated","history","top","right","paddingBottom","v","filter","s","toLowerCase","includes"],"mappings":"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","file":"static/js/3.2732da21.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport carboxyl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport MapboxLanguage from \"@mapbox/mapbox-gl-language\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./Map.css\";\n\ncarboxyl.accessToken =\n  \"pk.eyJ1IjoidGhyaW5ldGhyYSIsImEiOiJja2wzdDAwMWYwN3JuMm5uMTQxcjQyb2w2In0.XfGU-QlqlhgTpjm2I_Ye9Q\";\n\nconst Map = (props) => {\n  const { t, lang } = props;\n  const mapContainerRef = useRef(null);\n  const [lng, setLng] = useState(5);\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n  const colors = [\"#a8a8a8\", \"#0194e9\", \"#fa7924\", \"#ffab1c\"];\n  const { warehouseLocation, warehouseArr, visible, shipment } = props;\n  const markers = [];\n  let newMarker;\n\n  const user = useSelector((state) => {\n    return state.user;\n  });\n\n  function toRad(Value) {\n    return (Value * Math.PI) / 180;\n  }\n\n  function radians_to_degrees(radians) {\n    var pi = Math.PI;\n    return radians * (180 / pi);\n  }\n\n  const midPoint = (lat1, lon1, lat2, lon2) => {\n    const dLon = toRad(lon2 - lon1);\n\n    //convert to radians\n    lat1 = toRad(lat1);\n    lat2 = toRad(lat2);\n    lon1 = toRad(lon1);\n\n    const Bx = Math.cos(lat2) * Math.cos(dLon);\n    const By = Math.cos(lat2) * Math.sin(dLon);\n    const lat3 = Math.atan2(\n      Math.sin(lat1) + Math.sin(lat2),\n      Math.sqrt((Math.cos(lat1) + Bx) * (Math.cos(lat1) + Bx) + By * By)\n    );\n    const lon3 = lon1 + Math.atan2(By, Math.cos(lat1) + Bx);\n\n    return { lat: radians_to_degrees(lat3), long: radians_to_degrees(lon3) };\n  };\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    let map = new carboxyl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/light-v10\",\n      center: [lng, lat],\n      zoom: zoom,\n    });\n\n    if (warehouseLocation?.latitude) {\n      map = new carboxyl.Map({\n        container: mapContainerRef.current,\n        style: \"mapbox://styles/mapbox/light-v10\",\n        center: [\n          parseFloat(warehouseLocation.longitude),\n          parseFloat(warehouseLocation.latitude),\n        ],\n        zoom: 2,\n      });\n      setLng(warehouseLocation.longitude);\n      setLat(parseFloat(warehouseLocation.latitude));\n      const coords = [\n        parseFloat(warehouseLocation.longitude),\n        parseFloat(warehouseLocation.latitude),\n      ];\n      newMarker = new carboxyl.Marker().setLngLat(coords).addTo(map);\n      markers.push(newMarker);\n    }\n\n    if (warehouseArr.length > 0) {\n      warehouseArr.forEach((w, i) => {\n        if (w.location?.latitude) {\n          if (i === 0) {\n            map = new carboxyl.Map({\n              container: mapContainerRef.current,\n              style: \"mapbox://styles/mapbox/light-v10\",\n              center: [\n                parseFloat(w.location.longitude),\n                parseFloat(w.location.latitude),\n              ],\n              zoom: 2,\n            });\n            setLng(parseFloat(w.location.longitude));\n            setLat(parseFloat(w.location.latitude));\n          }\n          const coords = [\n            parseFloat(w.location.longitude),\n            parseFloat(w.location.latitude),\n          ];\n          let color = colors[Math.floor(Math.random() * 3) + 1];\n          let options = { color: color };\n          if (warehouseLocation) {\n            options.color = colors[0];\n            if (\n              warehouseLocation.latitude === w.location.latitude &&\n              warehouseLocation.longitude === w.location.longitude\n            ) {\n              options.color = colors[Math.floor(Math.random() * 3) + 1];\n              options.scale = 2;\n            }\n          }\n\n          newMarker = new carboxyl.Marker(options).setLngLat(coords).addTo(map);\n          markers.push(newMarker);\n        }\n      });\n    }\n\n    if (visible && shipment?.supplier !== undefined) {\n      var geojson = {\n        type: \"FeatureCollection\",\n        features: [\n          {\n            type: \"Feature\",\n            geometry: {\n              type: \"LineString\",\n              properties: {},\n              coordinates: [\n                [\n                  parseFloat(\n                    shipment?.receiver?.warehouse?.location?.longitude\n                  ),\n                  parseFloat(shipment?.receiver?.warehouse?.location?.latitude),\n                ],\n                [\n                  parseFloat(\n                    shipment?.supplier?.warehouse?.location?.longitude\n                  ),\n                  parseFloat(shipment?.supplier?.warehouse?.location?.latitude),\n                ],\n              ],\n            },\n          },\n        ],\n      };\n\n      map.on(\"load\", function () {\n        map.addSource(\"LineString\", {\n          type: \"geojson\",\n          data: geojson,\n        });\n\n        map.addLayer({\n          id: \"LineString\",\n          type: \"line\",\n          source: \"LineString\",\n          layout: {\n            \"line-join\": \"round\",\n            \"line-cap\": \"round\",\n          },\n          paint: {\n            \"line-color\": \"#BF93E4\",\n            \"line-width\": 5,\n          },\n        });\n      });\n\n      newMarker = new carboxyl.Marker()\n        .setLngLat([\n          parseFloat(shipment?.receiver?.warehouse?.location?.longitude),\n          parseFloat(shipment?.receiver?.warehouse?.location?.latitude),\n        ])\n        .addTo(map);\n      markers.push(newMarker);\n      newMarker = new carboxyl.Marker()\n        .setLngLat([\n          parseFloat(shipment?.supplier?.warehouse?.location?.longitude),\n          parseFloat(shipment?.supplier?.warehouse?.location?.latitude),\n        ])\n        .addTo(map);\n      markers.push(newMarker);\n\n      let popL = midPoint(\n        parseFloat(shipment?.receiver?.warehouse?.location?.latitude),\n        parseFloat(shipment?.receiver?.warehouse?.location?.longitude),\n        parseFloat(shipment?.supplier?.warehouse?.location?.latitude),\n        parseFloat(shipment?.supplier?.warehouse?.location?.longitude)\n      );\n      setLng(popL.long);\n      setLat(popL.lat);\n      new carboxyl.Popup({\n        offset: 25,\n        className: \"popUp\",\n        closeOnClick: false,\n      })\n        .setLngLat([popL.long, popL.lat])\n        .setHTML(\n          `<div class=\"pt-1 text-white pb-1 pl-2 pr-2\">\n              <div class=\"row\"><span class=\"col-7 disabled\">${t(\n                \"shipment_id\"\n              )}:</span> <span class=\" col-3 font-weight-bold\">${\n            shipment.id\n          }</span></div>\n              <div class=\"row\"> <span class=\"col-5 disabled text-decoration-underline\"> ${\n                user?.walletAddress\n              }</span> </div>\n              <div class=\"row pt-1 pb-1\">\n                <div class=\"col-1\"> </div> \n                <div class=\"col-2 disabled\">${t(\"from\")}:</div> \n                <div class=\"col\">\n                  <div class=\"font-weight-bold\">${\n                    shipment.supplier.org.name\n                  } </div>\n                  <div class=\"disabled\">${\n                    shipment.supplier?.warehouse?.warehouseAddress?.city\n                  }</div>\n                </div>\n              </div>\n              <div class=\"row pt-1 pb-1\">\n                <div class=\"col-1\"> </div>\n                <div class=\"col-2 disabled\">${t(\"to\")}:</div>\n                <div class=\"col\">\n                  <div class=\"font-weight-bold\">${\n                    shipment.receiver.org.name\n                  }</div>\n                  <div class=\"disabled\">${\n                    shipment.receiver?.warehouse?.warehouseAddress?.city\n                  }</div>\n                </div>\n              </div>\n            </div>`\n        )\n        .addTo(map);\n    }\n\n    map.addControl(new carboxyl.NavigationControl(), \"top-right\");\n\n    map.on(\"move\", () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n    const language = new MapboxLanguage({ defaultLanguage: lang });\n    map.addControl(language);\n    return () => map.remove();\n  }, [props]);\n\n  return (\n    <div>\n      <div className='sidebarStyle'>\n        <div>\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n      </div>\n      <div className='map-container' ref={mapContainerRef} />\n    </div>\n  );\n};\n\nexport default Map;\n","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { Search } from \"@mui/icons-material\";\nimport \"./style.scss\";\n\nconst Tabs = (props) => {\n  const {\n    filteredWareHouses,\n    visible,\n    setVisible,\n    setWarehouseText,\n    onWarehouseChange,\n    onSearchClick,\n    setContent,\n    setDashVisible,\n    warehouseArr,\n    setWarehouseArr,\n    setDashBarData,\n    t,\n  } = props;\n  const [isClicked, setIsClicked] = useState(false);\n\n  console.log(filteredWareHouses);\n  return (\n    <div className='dashboardtabs'>\n      <ul className='nav nav-pills mb-2 flex-sb'>\n        <div className='left-flex'>\n          <li\n            className={visible ? \"nav-item\" : \"nav-item-active\"}\n            onClick={() => {\n              if (warehouseArr.length > 0) setWarehouseArr([]);\n              setWarehouseText(\"\");\n              setDashVisible(false);\n              setDashBarData({});\n              setVisible(false);\n            }}\n          >\n            <div className={visible ? \"nav-link text-secondary\" : \"nav-link\"}>\n              {t(\"storage_location\")}\n            </div>\n          </li>\n          <li\n            className={visible ? \"nav-item-active \" : \"nav-item\"}\n            onClick={() => {\n              if (warehouseArr.length > 0) setWarehouseArr([]);\n              setWarehouseText(\"\");\n              setDashVisible(false);\n              setDashBarData({});\n              setVisible(true);\n            }}\n          >\n            <div className={visible ? \"nav-link\" : \"nav-link text-secondary\"}>\n              {t(\"shipment\")}\n            </div>\n          </li>\n        </div>\n        <div className='right-flex'>\n          <div>\n            <div style={{ position: \"relative\" }}>\n              <Autocomplete\n                freeSolo\n                id='free-solo-2-demo'\n                disableClearable\n                sx={{ width: \"300px\" }}\n                options={filteredWareHouses.map((warehouse) => warehouse)}\n                getOptionLabel={(warehouse) =>\n                  visible ? warehouse.id : warehouse.title\n                }\n                onChange={(e, key) => {\n                  onSearchClick(key.id);\n                }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    disableClearable\n                    placeholder={\n                      visible\n                        ? t(\"enter\") + \" \" + t(\"shipment_id\")\n                        : t(\"enter\") + \" \" + t(\"location_id\")\n                    }\n                    InputProps={{\n                      ...params.InputProps,\n                      type: \"searcH\",\n                    }}\n                    onChange={(e) => {\n                      if (isClicked) setIsClicked(false);\n                      onWarehouseChange(e.target.value);\n                    }}\n                    onClick={() => onWarehouseChange(\"\")}\n                    size='small'\n                    className=\"mi-auto-height\"\n                  />\n                )}\n              />\n              <Search\n                className='network-search-icon darkblue'\n                style={{}}\n                onClick={() => onSearchClick()}\n              />\n            </div>\n          </div>\n          <div>\n            {!visible && (\n              <button\n                className='mi-btn mi-btn-md mi-btn-primary'\n                onClick={() => {\n                  setContent(false);\n                  setDashVisible(true);\n                }}\n              >\n                {t(\"search\") + \" \" + t(\"location\")}\n              </button>\n            )}\n          </div>\n        </div>\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React, { useState } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport Map from \"../Map\";\nimport Tabs from \"./dashboardtabs/tabs\";\nimport { isAuthenticated } from \"../../utils/commonHelper\";\n\nconst DashBoard = (props) => {\n  const { t,lang } = props;\n  const {\n    warehouses,\n    warehouseArr,\n    warehouseLocation,\n    shipment,\n    shipmentIds,\n    visible,\n  } = props;\n  const [warehouseText, setWarehouseText] = useState(\"\");\n  const [refArr, setRefArr] = useState([]);\n\n  if (!isAuthenticated(\"network\")) props.history.push(`/profile`);\n\n  const onWarehouseChange = (v) => {\n    setWarehouseText(v);\n    if (!visible)\n      setRefArr(\n        warehouses?.filter((w) =>\n          w.title\n            ? w.title.toLowerCase().includes(v.toLowerCase()) ||\n              w.id.toLowerCase().includes(v.toLowerCase())\n            : w.id.toLowerCase().includes(v.toLowerCase())\n        )\n      );\n    else\n      setRefArr(\n        shipmentIds?.filter((s) => s.id.toLowerCase().includes(v.toLowerCase()))\n      );\n  };\n\n  return (\n    <div className='dashboard'>\n      <div style={{ position: \"relative\", top: \"-10px\", right: \"25px\" }}>\n        <h1 style={{paddingBottom:\"10px\"}} className=\"vl-heading-bdr black f-700\">{t('your_network')}</h1>\n      </div>\n      <div className='panel'>\n        <Map\n          shipment={shipment}\n          visible={visible}\n          warehouseArr={warehouseArr}\n          warehouseLocation={warehouseLocation}\n          t={t}\n          lang={lang}\n        />\n        <div className=''>\n          <Tabs\n            {...props}\n            warehouseText={warehouseText}\n            setWarehouseText={setWarehouseText}\n            filteredWareHouses={refArr}\n            onWarehouseChange={onWarehouseChange}\n            onSearchClick={(w) => props.onSearchClick(w)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashBoard;\n"],"sourceRoot":""}
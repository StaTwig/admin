import * as logger from './lib/logzio-nodejs';

const dummyHost = 'mocked-listener.logz.io';
const nockHttpAddress = `https://${dummyHost}:8071`;
const dummyToken = '123456789';
const dummyPort = "8071";
let parseMessagesArray = ["log", "log2", "log3"];

const context = {
  log: () => { },
  done: () => { },
  err: () => { },
};

function getCallBackFunction(context: any) {
  return function callback(err: Error, bulk: object) {
    if (err) {
      context.err(`logzio-logger error: ${err}`, err);
    }
    context.done();
  };
}

const callBackFunction = getCallBackFunction(context);

const logzioShipper = logger.createLogger({
  token: 'VRumDxNPhJyNAHmAZXnqJKPqDuGJVesn',
  host: `listener.logz.io`,
  type: 'eventHub',
  protocol: 'https',
  internalLogger: context,
  compress: true,
  debug: true,
  callback: callBackFunction,
  port: "8071",
  addTimestampWithNanoSecs: true
});

let i = 1;
let time_list = [];
let gettimestamp, nanotime, sent = false;
do {
  var msg = `count log # ${i}`;
  logzioShipper.log(msg, { roni:10 });
  i++;

} while (i < 2)


console.log(logzioShipper);
logzioShipper.sendAndClose(logzioShipper.callback);
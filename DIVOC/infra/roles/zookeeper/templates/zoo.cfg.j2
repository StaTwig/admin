# http://hadoop.apache.org/zookeeper/docs/current/zookeeperAdmin.html

# The number of milliseconds of each tick
tickTime={{ sansible_zookeeper_tick_time }}
# The number of ticks that the initial
# synchronization phase can take
initLimit={{ sansible_zookeeper_init_limit }}
# The number of ticks that can pass between
# sending a request and getting an acknowledgement
syncLimit={{ sansible_zookeeper_sync_limit }}
# the directory where the snapshot is stored.
dataDir={{ sansible_zookeeper_data_dir }}
# Place the dataLogDir to a separate physical disc for better performance
# dataLogDir=/disk2/zookeeper

# the port at which the clients will connect
clientPort={{ sansible_zookeeper_client_port }}

# Maximum number of clients that can connect from one client
{#
# specify all zookeeper servers
# The first port is used by followers to connect to the leader
# The second one is used for leader election
#}
{% for url in sansible_zookeeper_hosts %}
server.{{ loop.index }}={{ url }}:{{ sansible_zookeeper_connect_port }}:{{ sansible_zookeeper_election_port }}
{% endfor %}

# To avoid seeks ZooKeeper allocates space in the transaction log file in
# blocks of preAllocSize kilobytes. The default block size is 64M. One reason
# for changing the size of the blocks is to reduce the block size if snapshots
# are taken more often. (Also, see snapCount).
#preAllocSize=65536

# Clients can submit requests faster than ZooKeeper can process them,
# especially if there are a lot of clients. To prevent ZooKeeper from running
# out of memory due to queued requests, ZooKeeper will throttle clients so that
# there is no more than globalOutstandingLimit outstanding requests in the
# system. The default limit is 1,000.ZooKeeper logs transactions to a
# transaction log. After snapCount transactions are written to a log file a
# snapshot is started and a new transaction log file is started. The default
# snapCount is 10,000.
#snapCount=1000

# If this option is defined, requests will be will logged to a trace file named
# traceFile.year.month.day.
#traceFile=

# Leader accepts client connections. Default value is "yes". The leader machine
# coordinates updates. For higher update throughput at thes slight expense of
# read throughput the leader can be configured to not accept clients and focus
# on coordination.
leaderServes=yes

# Election implementation to use
electionAlg=3

# Autopurge every hour to avoid using lots of disk in bursts
# Order of the next 2 properties matters.
# autopurge.snapRetainCount must be before autopurge.purgeInterval.
autopurge.snapRetainCount=3
autopurge.purgeInterval=1

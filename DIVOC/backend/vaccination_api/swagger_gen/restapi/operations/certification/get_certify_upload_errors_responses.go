// Code generated by go-swagger; DO NOT EDIT.

package certification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetCertifyUploadErrorsOKCode is the HTTP code returned for type GetCertifyUploadErrorsOK
const GetCertifyUploadErrorsOKCode int = 200

/*GetCertifyUploadErrorsOK OK

swagger:response getCertifyUploadErrorsOK
*/
type GetCertifyUploadErrorsOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetCertifyUploadErrorsOK creates GetCertifyUploadErrorsOK with default headers values
func NewGetCertifyUploadErrorsOK() *GetCertifyUploadErrorsOK {

	return &GetCertifyUploadErrorsOK{}
}

// WithPayload adds the payload to the get certify upload errors o k response
func (o *GetCertifyUploadErrorsOK) WithPayload(payload interface{}) *GetCertifyUploadErrorsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get certify upload errors o k response
func (o *GetCertifyUploadErrorsOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCertifyUploadErrorsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetCertifyUploadErrorsForbiddenCode is the HTTP code returned for type GetCertifyUploadErrorsForbidden
const GetCertifyUploadErrorsForbiddenCode int = 403

/*GetCertifyUploadErrorsForbidden Forbidden for user

swagger:response getCertifyUploadErrorsForbidden
*/
type GetCertifyUploadErrorsForbidden struct {
}

// NewGetCertifyUploadErrorsForbidden creates GetCertifyUploadErrorsForbidden with default headers values
func NewGetCertifyUploadErrorsForbidden() *GetCertifyUploadErrorsForbidden {

	return &GetCertifyUploadErrorsForbidden{}
}

// WriteResponse to the client
func (o *GetCertifyUploadErrorsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetCertifyUploadErrorsNotFoundCode is the HTTP code returned for type GetCertifyUploadErrorsNotFound
const GetCertifyUploadErrorsNotFoundCode int = 404

/*GetCertifyUploadErrorsNotFound certify upload for given uploadID not found

swagger:response getCertifyUploadErrorsNotFound
*/
type GetCertifyUploadErrorsNotFound struct {
}

// NewGetCertifyUploadErrorsNotFound creates GetCertifyUploadErrorsNotFound with default headers values
func NewGetCertifyUploadErrorsNotFound() *GetCertifyUploadErrorsNotFound {

	return &GetCertifyUploadErrorsNotFound{}
}

// WriteResponse to the client
func (o *GetCertifyUploadErrorsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

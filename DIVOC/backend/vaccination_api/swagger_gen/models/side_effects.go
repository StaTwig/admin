// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SideEffects side effects
//
// swagger:model SideEffects
type SideEffects struct {

	// recipient ids
	RecipientIds []string `json:"recipientIds"`

	// symptoms
	Symptoms []*SideEffectsSymptomsItems0 `json:"symptoms"`
}

// Validate validates this side effects
func (m *SideEffects) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSymptoms(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SideEffects) validateSymptoms(formats strfmt.Registry) error {

	if swag.IsZero(m.Symptoms) { // not required
		return nil
	}

	for i := 0; i < len(m.Symptoms); i++ {
		if swag.IsZero(m.Symptoms[i]) { // not required
			continue
		}

		if m.Symptoms[i] != nil {
			if err := m.Symptoms[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("symptoms" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SideEffects) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SideEffects) UnmarshalBinary(b []byte) error {
	var res SideEffects
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// SideEffectsSymptomsItems0 side effects symptoms items0
//
// swagger:model SideEffectsSymptomsItems0
type SideEffectsSymptomsItems0 struct {

	// additional details
	AdditionalDetails string `json:"additionalDetails,omitempty"`

	// id
	ID string `json:"id,omitempty"`
}

// Validate validates this side effects symptoms items0
func (m *SideEffectsSymptomsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SideEffectsSymptomsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SideEffectsSymptomsItems0) UnmarshalBinary(b []byte) error {
	var res SideEffectsSymptomsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

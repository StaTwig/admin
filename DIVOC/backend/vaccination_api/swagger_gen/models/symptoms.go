// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Symptoms symptoms
//
// swagger:model Symptoms
type Symptoms struct {

	// instructions
	Instructions []*SymptomsInstructionsItems0 `json:"instructions"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this symptoms
func (m *Symptoms) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInstructions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Symptoms) validateInstructions(formats strfmt.Registry) error {

	if swag.IsZero(m.Instructions) { // not required
		return nil
	}

	for i := 0; i < len(m.Instructions); i++ {
		if swag.IsZero(m.Instructions[i]) { // not required
			continue
		}

		if m.Instructions[i] != nil {
			if err := m.Instructions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("instructions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *Symptoms) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Symptoms) UnmarshalBinary(b []byte) error {
	var res Symptoms
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// SymptomsInstructionsItems0 symptoms instructions items0
//
// swagger:model SymptomsInstructionsItems0
type SymptomsInstructionsItems0 struct {

	// image URL
	ImageURL []string `json:"imageURL"`

	// messages
	Messages []string `json:"messages"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this symptoms instructions items0
func (m *SymptomsInstructionsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SymptomsInstructionsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SymptomsInstructionsItems0) UnmarshalBinary(b []byte) error {
	var res SymptomsInstructionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

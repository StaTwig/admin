// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetPublicAnalyticsOKCode is the HTTP code returned for type GetPublicAnalyticsOK
const GetPublicAnalyticsOKCode int = 200

/*GetPublicAnalyticsOK OK

swagger:response getPublicAnalyticsOK
*/
type GetPublicAnalyticsOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetPublicAnalyticsOK creates GetPublicAnalyticsOK with default headers values
func NewGetPublicAnalyticsOK() *GetPublicAnalyticsOK {

	return &GetPublicAnalyticsOK{}
}

// WithPayload adds the payload to the get public analytics o k response
func (o *GetPublicAnalyticsOK) WithPayload(payload interface{}) *GetPublicAnalyticsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public analytics o k response
func (o *GetPublicAnalyticsOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicAnalyticsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetPublicAnalyticsUnauthorizedCode is the HTTP code returned for type GetPublicAnalyticsUnauthorized
const GetPublicAnalyticsUnauthorizedCode int = 401

/*GetPublicAnalyticsUnauthorized Unauthorized

swagger:response getPublicAnalyticsUnauthorized
*/
type GetPublicAnalyticsUnauthorized struct {
}

// NewGetPublicAnalyticsUnauthorized creates GetPublicAnalyticsUnauthorized with default headers values
func NewGetPublicAnalyticsUnauthorized() *GetPublicAnalyticsUnauthorized {

	return &GetPublicAnalyticsUnauthorized{}
}

// WriteResponse to the client
func (o *GetPublicAnalyticsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetVaccinatorsUploadsErrorsOKCode is the HTTP code returned for type GetVaccinatorsUploadsErrorsOK
const GetVaccinatorsUploadsErrorsOKCode int = 200

/*GetVaccinatorsUploadsErrorsOK OK

swagger:response getVaccinatorsUploadsErrorsOK
*/
type GetVaccinatorsUploadsErrorsOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetVaccinatorsUploadsErrorsOK creates GetVaccinatorsUploadsErrorsOK with default headers values
func NewGetVaccinatorsUploadsErrorsOK() *GetVaccinatorsUploadsErrorsOK {

	return &GetVaccinatorsUploadsErrorsOK{}
}

// WithPayload adds the payload to the get vaccinators uploads errors o k response
func (o *GetVaccinatorsUploadsErrorsOK) WithPayload(payload interface{}) *GetVaccinatorsUploadsErrorsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get vaccinators uploads errors o k response
func (o *GetVaccinatorsUploadsErrorsOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVaccinatorsUploadsErrorsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetVaccinatorsUploadsErrorsForbiddenCode is the HTTP code returned for type GetVaccinatorsUploadsErrorsForbidden
const GetVaccinatorsUploadsErrorsForbiddenCode int = 403

/*GetVaccinatorsUploadsErrorsForbidden Forbidden for user

swagger:response getVaccinatorsUploadsErrorsForbidden
*/
type GetVaccinatorsUploadsErrorsForbidden struct {
}

// NewGetVaccinatorsUploadsErrorsForbidden creates GetVaccinatorsUploadsErrorsForbidden with default headers values
func NewGetVaccinatorsUploadsErrorsForbidden() *GetVaccinatorsUploadsErrorsForbidden {

	return &GetVaccinatorsUploadsErrorsForbidden{}
}

// WriteResponse to the client
func (o *GetVaccinatorsUploadsErrorsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetVaccinatorsUploadsErrorsNotFoundCode is the HTTP code returned for type GetVaccinatorsUploadsErrorsNotFound
const GetVaccinatorsUploadsErrorsNotFoundCode int = 404

/*GetVaccinatorsUploadsErrorsNotFound vaccinators upload for given uploadID not found

swagger:response getVaccinatorsUploadsErrorsNotFound
*/
type GetVaccinatorsUploadsErrorsNotFound struct {
}

// NewGetVaccinatorsUploadsErrorsNotFound creates GetVaccinatorsUploadsErrorsNotFound with default headers values
func NewGetVaccinatorsUploadsErrorsNotFound() *GetVaccinatorsUploadsErrorsNotFound {

	return &GetVaccinatorsUploadsErrorsNotFound{}
}

// WriteResponse to the client
func (o *GetVaccinatorsUploadsErrorsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

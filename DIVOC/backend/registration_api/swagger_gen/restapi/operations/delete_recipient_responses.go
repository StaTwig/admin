// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteRecipientOKCode is the HTTP code returned for type DeleteRecipientOK
const DeleteRecipientOKCode int = 200

/*DeleteRecipientOK OK

swagger:response deleteRecipientOK
*/
type DeleteRecipientOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewDeleteRecipientOK creates DeleteRecipientOK with default headers values
func NewDeleteRecipientOK() *DeleteRecipientOK {

	return &DeleteRecipientOK{}
}

// WithPayload adds the payload to the delete recipient o k response
func (o *DeleteRecipientOK) WithPayload(payload interface{}) *DeleteRecipientOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete recipient o k response
func (o *DeleteRecipientOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRecipientOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DeleteRecipientBadRequestCode is the HTTP code returned for type DeleteRecipientBadRequest
const DeleteRecipientBadRequestCode int = 400

/*DeleteRecipientBadRequest Bad Request

swagger:response deleteRecipientBadRequest
*/
type DeleteRecipientBadRequest struct {

	/*
	  In: Body
	*/
	Payload *DeleteRecipientBadRequestBody `json:"body,omitempty"`
}

// NewDeleteRecipientBadRequest creates DeleteRecipientBadRequest with default headers values
func NewDeleteRecipientBadRequest() *DeleteRecipientBadRequest {

	return &DeleteRecipientBadRequest{}
}

// WithPayload adds the payload to the delete recipient bad request response
func (o *DeleteRecipientBadRequest) WithPayload(payload *DeleteRecipientBadRequestBody) *DeleteRecipientBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete recipient bad request response
func (o *DeleteRecipientBadRequest) SetPayload(payload *DeleteRecipientBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRecipientBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteRecipientUnauthorizedCode is the HTTP code returned for type DeleteRecipientUnauthorized
const DeleteRecipientUnauthorizedCode int = 401

/*DeleteRecipientUnauthorized Unauthorized

swagger:response deleteRecipientUnauthorized
*/
type DeleteRecipientUnauthorized struct {
}

// NewDeleteRecipientUnauthorized creates DeleteRecipientUnauthorized with default headers values
func NewDeleteRecipientUnauthorized() *DeleteRecipientUnauthorized {

	return &DeleteRecipientUnauthorized{}
}

// WriteResponse to the client
func (o *DeleteRecipientUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// DeleteRecipientInternalServerErrorCode is the HTTP code returned for type DeleteRecipientInternalServerError
const DeleteRecipientInternalServerErrorCode int = 500

/*DeleteRecipientInternalServerError Internal Error

swagger:response deleteRecipientInternalServerError
*/
type DeleteRecipientInternalServerError struct {
}

// NewDeleteRecipientInternalServerError creates DeleteRecipientInternalServerError with default headers values
func NewDeleteRecipientInternalServerError() *DeleteRecipientInternalServerError {

	return &DeleteRecipientInternalServerError{}
}

// WriteResponse to the client
func (o *DeleteRecipientInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// RegisterRecipientToProgramOKCode is the HTTP code returned for type RegisterRecipientToProgramOK
const RegisterRecipientToProgramOKCode int = 200

/*RegisterRecipientToProgramOK OK

swagger:response registerRecipientToProgramOK
*/
type RegisterRecipientToProgramOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewRegisterRecipientToProgramOK creates RegisterRecipientToProgramOK with default headers values
func NewRegisterRecipientToProgramOK() *RegisterRecipientToProgramOK {

	return &RegisterRecipientToProgramOK{}
}

// WithPayload adds the payload to the register recipient to program o k response
func (o *RegisterRecipientToProgramOK) WithPayload(payload interface{}) *RegisterRecipientToProgramOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register recipient to program o k response
func (o *RegisterRecipientToProgramOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterRecipientToProgramOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// RegisterRecipientToProgramBadRequestCode is the HTTP code returned for type RegisterRecipientToProgramBadRequest
const RegisterRecipientToProgramBadRequestCode int = 400

/*RegisterRecipientToProgramBadRequest Bad Request

swagger:response registerRecipientToProgramBadRequest
*/
type RegisterRecipientToProgramBadRequest struct {
}

// NewRegisterRecipientToProgramBadRequest creates RegisterRecipientToProgramBadRequest with default headers values
func NewRegisterRecipientToProgramBadRequest() *RegisterRecipientToProgramBadRequest {

	return &RegisterRecipientToProgramBadRequest{}
}

// WriteResponse to the client
func (o *RegisterRecipientToProgramBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// RegisterRecipientToProgramUnauthorizedCode is the HTTP code returned for type RegisterRecipientToProgramUnauthorized
const RegisterRecipientToProgramUnauthorizedCode int = 401

/*RegisterRecipientToProgramUnauthorized Unauthorized

swagger:response registerRecipientToProgramUnauthorized
*/
type RegisterRecipientToProgramUnauthorized struct {
}

// NewRegisterRecipientToProgramUnauthorized creates RegisterRecipientToProgramUnauthorized with default headers values
func NewRegisterRecipientToProgramUnauthorized() *RegisterRecipientToProgramUnauthorized {

	return &RegisterRecipientToProgramUnauthorized{}
}

// WriteResponse to the client
func (o *RegisterRecipientToProgramUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// RegisterRecipientToProgramInternalServerErrorCode is the HTTP code returned for type RegisterRecipientToProgramInternalServerError
const RegisterRecipientToProgramInternalServerErrorCode int = 500

/*RegisterRecipientToProgramInternalServerError Internal Error

swagger:response registerRecipientToProgramInternalServerError
*/
type RegisterRecipientToProgramInternalServerError struct {
}

// NewRegisterRecipientToProgramInternalServerError creates RegisterRecipientToProgramInternalServerError with default headers values
func NewRegisterRecipientToProgramInternalServerError() *RegisterRecipientToProgramInternalServerError {

	return &RegisterRecipientToProgramInternalServerError{}
}

// WriteResponse to the client
func (o *RegisterRecipientToProgramInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}

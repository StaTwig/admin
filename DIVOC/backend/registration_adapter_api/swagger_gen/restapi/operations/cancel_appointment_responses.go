// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// CancelAppointmentOKCode is the HTTP code returned for type CancelAppointmentOK
const CancelAppointmentOKCode int = 200

/*CancelAppointmentOK OK

swagger:response cancelAppointmentOK
*/
type CancelAppointmentOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCancelAppointmentOK creates CancelAppointmentOK with default headers values
func NewCancelAppointmentOK() *CancelAppointmentOK {

	return &CancelAppointmentOK{}
}

// WithPayload adds the payload to the cancel appointment o k response
func (o *CancelAppointmentOK) WithPayload(payload interface{}) *CancelAppointmentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel appointment o k response
func (o *CancelAppointmentOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelAppointmentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CancelAppointmentBadRequestCode is the HTTP code returned for type CancelAppointmentBadRequest
const CancelAppointmentBadRequestCode int = 400

/*CancelAppointmentBadRequest Bad Request

swagger:response cancelAppointmentBadRequest
*/
type CancelAppointmentBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCancelAppointmentBadRequest creates CancelAppointmentBadRequest with default headers values
func NewCancelAppointmentBadRequest() *CancelAppointmentBadRequest {

	return &CancelAppointmentBadRequest{}
}

// WithPayload adds the payload to the cancel appointment bad request response
func (o *CancelAppointmentBadRequest) WithPayload(payload interface{}) *CancelAppointmentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel appointment bad request response
func (o *CancelAppointmentBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelAppointmentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CancelAppointmentUnauthorizedCode is the HTTP code returned for type CancelAppointmentUnauthorized
const CancelAppointmentUnauthorizedCode int = 401

/*CancelAppointmentUnauthorized Unauthorized

swagger:response cancelAppointmentUnauthorized
*/
type CancelAppointmentUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCancelAppointmentUnauthorized creates CancelAppointmentUnauthorized with default headers values
func NewCancelAppointmentUnauthorized() *CancelAppointmentUnauthorized {

	return &CancelAppointmentUnauthorized{}
}

// WithPayload adds the payload to the cancel appointment unauthorized response
func (o *CancelAppointmentUnauthorized) WithPayload(payload interface{}) *CancelAppointmentUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel appointment unauthorized response
func (o *CancelAppointmentUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelAppointmentUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CancelAppointmentConflictCode is the HTTP code returned for type CancelAppointmentConflict
const CancelAppointmentConflictCode int = 409

/*CancelAppointmentConflict Cannot cancel

swagger:response cancelAppointmentConflict
*/
type CancelAppointmentConflict struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCancelAppointmentConflict creates CancelAppointmentConflict with default headers values
func NewCancelAppointmentConflict() *CancelAppointmentConflict {

	return &CancelAppointmentConflict{}
}

// WithPayload adds the payload to the cancel appointment conflict response
func (o *CancelAppointmentConflict) WithPayload(payload interface{}) *CancelAppointmentConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel appointment conflict response
func (o *CancelAppointmentConflict) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelAppointmentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

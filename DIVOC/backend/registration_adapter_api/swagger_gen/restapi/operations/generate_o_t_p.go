// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GenerateOTPHandlerFunc turns a function with the right signature into a generate o t p handler
type GenerateOTPHandlerFunc func(GenerateOTPParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GenerateOTPHandlerFunc) Handle(params GenerateOTPParams) middleware.Responder {
	return fn(params)
}

// GenerateOTPHandler interface for that can handle valid generate o t p params
type GenerateOTPHandler interface {
	Handle(GenerateOTPParams) middleware.Responder
}

// NewGenerateOTP creates a new http.Handler for the generate o t p operation
func NewGenerateOTP(ctx *middleware.Context, handler GenerateOTPHandler) *GenerateOTP {
	return &GenerateOTP{Context: ctx, Handler: handler}
}

/*GenerateOTP swagger:route POST /auth/generateOTP generateOTP

Generate OTP

*/
type GenerateOTP struct {
	Context *middleware.Context
	Handler GenerateOTPHandler
}

func (o *GenerateOTP) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGenerateOTPParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GenerateOTPBody generate o t p body
//
// swagger:model GenerateOTPBody
type GenerateOTPBody struct {

	// mobile
	// Required: true
	Mobile *string `json:"mobile"`
}

// Validate validates this generate o t p body
func (o *GenerateOTPBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMobile(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GenerateOTPBody) validateMobile(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"mobile", "body", o.Mobile); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GenerateOTPBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateOTPBody) UnmarshalBinary(b []byte) error {
	var res GenerateOTPBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GenerateOTPOKBody generate o t p o k body
//
// swagger:model GenerateOTPOKBody
type GenerateOTPOKBody struct {

	// txn
	Txn string `json:"txn,omitempty"`
}

// Validate validates this generate o t p o k body
func (o *GenerateOTPOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GenerateOTPOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GenerateOTPOKBody) UnmarshalBinary(b []byte) error {
	var res GenerateOTPOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

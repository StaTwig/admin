// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetTimeSlotsHandlerFunc turns a function with the right signature into a get time slots handler
type GetTimeSlotsHandlerFunc func(GetTimeSlotsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetTimeSlotsHandlerFunc) Handle(params GetTimeSlotsParams) middleware.Responder {
	return fn(params)
}

// GetTimeSlotsHandler interface for that can handle valid get time slots params
type GetTimeSlotsHandler interface {
	Handle(GetTimeSlotsParams) middleware.Responder
}

// NewGetTimeSlots creates a new http.Handler for the get time slots operation
func NewGetTimeSlots(ctx *middleware.Context, handler GetTimeSlotsHandler) *GetTimeSlots {
	return &GetTimeSlots{Context: ctx, Handler: handler}
}

/*GetTimeSlots swagger:route GET /appointment/timeslots/findByCenter getTimeSlots

getTimeSlots

*/
type GetTimeSlots struct {
	Context *middleware.Context
	Handler GetTimeSlotsHandler
}

func (o *GetTimeSlots) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetTimeSlotsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetTimeSlotsOKBody get time slots o k body
//
// swagger:model GetTimeSlotsOKBody
type GetTimeSlotsOKBody struct {

	// center id
	CenterID string `json:"center_id,omitempty"`

	// timeslots
	Timeslots []*GetTimeSlotsOKBodyTimeslotsItems0 `json:"timeslots"`
}

// Validate validates this get time slots o k body
func (o *GetTimeSlotsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTimeslots(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTimeSlotsOKBody) validateTimeslots(formats strfmt.Registry) error {

	if swag.IsZero(o.Timeslots) { // not required
		return nil
	}

	for i := 0; i < len(o.Timeslots); i++ {
		if swag.IsZero(o.Timeslots[i]) { // not required
			continue
		}

		if o.Timeslots[i] != nil {
			if err := o.Timeslots[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getTimeSlotsOK" + "." + "timeslots" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTimeSlotsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTimeSlotsOKBody) UnmarshalBinary(b []byte) error {
	var res GetTimeSlotsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetTimeSlotsOKBodyTimeslotsItems0 get time slots o k body timeslots items0
//
// swagger:model GetTimeSlotsOKBodyTimeslotsItems0
type GetTimeSlotsOKBodyTimeslotsItems0 struct {

	// available capacity
	AvailableCapacity string `json:"available_capacity,omitempty"`

	// date
	Date string `json:"date,omitempty"`

	// slot id
	SlotID string `json:"slot_id,omitempty"`

	// slot name
	SlotName string `json:"slot_name,omitempty"`

	// timings
	Timings string `json:"timings,omitempty"`
}

// Validate validates this get time slots o k body timeslots items0
func (o *GetTimeSlotsOKBodyTimeslotsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetTimeSlotsOKBodyTimeslotsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTimeSlotsOKBodyTimeslotsItems0) UnmarshalBinary(b []byte) error {
	var res GetTimeSlotsOKBodyTimeslotsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
